 Create a Local Content Pack Now that we have connected to the server, created a profile and downloaded the essential remote content packs, we can begin creating our local content pack. In this example, we will create a todo content pack. Click in the Local Packs pane. Create Local Packs The Create Content Pack is displayed. Create Content Pack Enter the Content pack name. The content pack name should be in lowercase which is the standard way used in Python and nodejs package names. The content pack name links to the package name in Python or in nodejs (npm package). Enter the Content pack provider. The content pack provider is a higher-level namespace to differentiate package names at an account level. Enter the Content pack version number. The selected content pack version should be based on npm versioning style which is prevalent in the node modules and at various package management system (Major. Minor, and Bug Fixes - 1.0.0). Select the Content pack dependencies. By default, all the content pack is dependent on system pack. System pack is a set of interfaces defined by the platform. This provides the information about the content pack and its relationship with the event, action, application, execution environment, and file directory. Enter the Content pack description. The content pack description is mandatory in all the places for documentation purpose. The information provided in this field will generate documentation for that pack. Select the Content pack parent directory. The content pack parent directory is where the content pack must be initialised. Click Create. ToDo Example The Local Packs pane lists the created local content pack. Created Local Content Pack 